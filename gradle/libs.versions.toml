[versions]
kotlin = "2.1.10"
ktor = "3.2.3"
logback = "1.4.14"
postgres = "42.7.5"
prometheus = "1.6.13"
exposed = "1.0.0-beta-5"
pdfbox = "3.0.4"
checker = "3.49.1"
mockk = "1.13.17"
coroutines = "1.10.1"
r2dbc = "1.0.7.RELEASE"
ktor-task-scheduling = "2.1.2"
junit = "5.12.1"
testcontainers = "1.20.6"

[libraries]
checker = { group = "org.checkerframework", name = "checker-qual", version.ref = "checker" }
exposed-core = { group = "org.jetbrains.exposed", name = "exposed-core", version.ref = "exposed" }
exposed-dao = { group = "org.jetbrains.exposed", name = "exposed-dao", version.ref = "exposed" }
exposed-r2dbc = { group = "org.jetbrains.exposed", name = "exposed-r2dbc", version.ref = "exposed" }


junit-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit" }
junit-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit" }
junit-bom = { group = "org.junit", name = "junit-bom", version.ref = "junit" }
junit-jupiter = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junit" }


kotlinx-coroutines-reactive = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-reactive", version.ref = "coroutines" }
ktor-client-cio = { group = "io.ktor", name = "ktor-client-cio", version.ref = "ktor" }
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-di = { group = "io.ktor", name = "ktor-server-di", version.ref = "ktor" }
ktor-server-auth = { group = "io.ktor", name = "ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { group = "io.ktor", name = "ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-call-logging = { group = "io.ktor", name = "ktor-server-call-logging", version.ref = "ktor" }
ktor-server-config-yaml = { group = "io.ktor", name = "ktor-server-config-yaml", version.ref = "ktor" }
ktor-server-content-negotiation = { group = "io.ktor", name = "ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { group = "io.ktor", name = "ktor-server-core", version.ref = "ktor" }
ktor-server-default-headers = { group = "io.ktor", name = "ktor-server-default-headers", version.ref = "ktor" }
ktor-server-forwarded-header = { group = "io.ktor", name = "ktor-server-forwarded-header", version.ref = "ktor" }
ktor-server-metrics-micrometer = { group = "io.ktor", name = "ktor-server-metrics-micrometer", version.ref = "ktor" }
ktor-server-netty = { group = "io.ktor", name = "ktor-server-netty", version.ref = "ktor" }
ktor-server-openapi = { group = "io.ktor", name = "ktor-server-openapi", version.ref = "ktor" }
ktor-server-request-validation = { group = "io.ktor", name = "ktor-server-request-validation", version.ref = "ktor" }
ktor-server-resources = { group = "io.ktor", name = "ktor-server-resources", version.ref = "ktor" }
ktor-server-sse = { group = "io.ktor", name = "ktor-server-sse", version.ref = "ktor" }
ktor-server-status-pages = { group = "io.ktor", name = "ktor-server-status-pages", version.ref = "ktor" }
ktor-server-swagger = { group = "io.ktor", name = "ktor-server-swagger", version.ref = "ktor" }

ktor-server-task-scheduling-core = { group = "io.github.flaxoos", name = "ktor-server-task-scheduling-core", version.ref = "ktor-task-scheduling" }
ktor-server-task-scheduling-jdbc = { group = "io.github.flaxoos", name = "ktor-server-task-scheduling-jdbc", version.ref = "ktor-task-scheduling" }
ktor-server-task-scheduling-mongodb = { group = "io.github.flaxoos", name = "ktor-server-task-scheduling-mongodb", version.ref = "ktor-task-scheduling" }
ktor-server-task-scheduling-redis = { group = "io.github.flaxoos", name = "ktor-server-task-scheduling-redis", version.ref = "ktor-task-scheduling" }

ktor-server-test-host = { group = "io.ktor", name = "ktor-server-test-host", version.ref = "ktor" }
logback-classic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }
micrometer-registry-prometheus = { group = "io.micrometer", name = "micrometer-registry-prometheus", version.ref = "prometheus" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
pdfbox-app = { group = "org.apache.pdfbox", name = "pdfbox-app", version.ref = "pdfbox" }
postgresql = { group = "org.postgresql", name = "postgresql", version.ref = "postgres" }
r2dbc-postgresql = { group = "org.postgresql", name = "r2dbc-postgresql", version.ref = "r2dbc" }
kotlin-test = { group = "org.jetbrains.kotlin", name = "kotlin-test", version.ref = "kotlin" }

testcontainers-core = { group = "org.testcontainers", name = "testcontainers", version.ref = "testcontainers" }
testcontainers-junit-jupiter = { group = "org.testcontainers", name = "junit-jupiter", version.ref = "testcontainers" }
testcontainers-postgresql = { group = "org.testcontainers", name = "postgresql", version.ref = "testcontainers" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor-plugin = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

[bundles]

ktor = [
    "ktor-client-core",
    "ktor-client-cio",
    "ktor-server-core",
    "ktor-server-auth",
    "ktor-server-di",
    "ktor-server-auth-jwt",
    "ktor-server-resources",
    "ktor-server-request-validation",
    "ktor-server-sse",
    "ktor-server-forwarded-header",
    "ktor-server-default-headers",
    "ktor-server-openapi",
    "ktor-server-status-pages",
    "ktor-server-swagger",
    "ktor-server-call-logging",
    "ktor-server-metrics-micrometer",
    "ktor-server-content-negotiation",
    "ktor-serialization-kotlinx-json",
    "ktor-server-netty",
    "ktor-server-config-yaml",
    "ktor-server-test-host"
]

junit = ["junit-api", "junit-engine", "junit-jupiter"]

ktor-task-scheduling = [
    "ktor-server-task-scheduling-core",
    "ktor-server-task-scheduling-redis",
    "ktor-server-task-scheduling-mongodb",
    "ktor-server-task-scheduling-jdbc"
]

exposed = [
    "exposed-core",
    "exposed-r2dbc",
    "exposed-dao"
]

testcontainers = [
    "testcontainers-core",
    "testcontainers-junit-jupiter",
    "testcontainers-postgresql"
]
